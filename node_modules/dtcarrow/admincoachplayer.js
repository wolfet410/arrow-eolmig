// Library code specifically for user api code
var Arrow = require('arrow'),
    Q = require('q'),
    Dtcarrow = require('dtcarrow');

module.exports.create = function(userId, details) {
    // Writes details for a given user to the appropriate Admin, Coach, or Player table
    var deferred = Q.defer();

    // Absolutely need sportId for this to work
    if (typeof details.sportId === 'undefined') {
        deferred.reject({ success: false, status: 422, caller: 'admincoachplayer.js>create', data: 'Missing sportId' });
        return deferred.promise;
    }

    // Model table is not used with customSqlQuery, but is still required
    var Model = Arrow.getModel('appc.mysql.eolmig/User');
    var query = 'INSERT INTO ' + details.type + ' '
              + '(userId, sportId, firstName, lastName, address, city, state, zip, phone';
    if (details.type === 'Player') {
        query += ', birthday, height, weight, hsName, hsTeamName, graduatingYear, gpa, hsCoachName, hsCoachEmail, hsCoachPhone,'
              + 'clubOrg, clubTeamName, clubCoachName, clubCoachEmail, clubCoachPhone, hsAwards, clubAwards) ';
    } else if (details.type === 'Coach') {
        query += ', orgName, teamName, experience, websiteTeam, websiteSchool, `character`, class2017, class2018, class2019) ';
    } else {
        query += ') ';
    }
    query += ' VALUES (' + userId + ',' + details.sportId + ',"' + details.firstName + '","' + details.lastName + '","'
          + details.address + '","' + details.city + '","' + details.state + '","' + details.zip + '","'
          + details.phone + '"';
    if (details.type === 'Player') {
        query += ',"' + details.birthday + '", ' + details.height + ', ' + details.weight + ', "' + details.hsName
              + '", "' + details.hsTeamName + '", "' + details.graduatingYear + '", "' + details.gpa
              + '", "' + details.hsCoachName + '", "' + details.hsCoachEmail + '", "' + details.hsCoachPhone
              + '", "' + details.clubOrg + '", "' + details.clubTeamName + '", "' + details.clubCoachName
              + '", "' + details.clubCoachEmail + '", "' + details.clubCoachPhone + '", "' + details.hsAwards
              + '", "' + details.clubAwards + '")';
    } else if (details.type === 'Coach') {
        query += ',"' + details.orgName + '","' + details.teamName + '","' + details.experience + '","' + details.websiteTeam
               + '","' + details.websiteSchool + '","' + details.character + '","' + details.class2017 + '","' + details.class2018
               + '","' + details.class2019 + '")';
    } else {
        query += ')';
    }

    Model.query({ customSqlQuery: query }, function(err, results) {
        if (err) {
            deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>create', data: err });
            return deferred.promise;
        }

        details.userId = userId;
        deferred.resolve({ success: true, status: 201, caller: 'admincoachplayer.js>create', data: details });
    });

    return deferred.promise;
}; 

module.exports.read = function(user) {
    // Gets the rest of the user details from the appropriate Admin, Coach, or Player table,
    // and returns user object with details
    var deferred = Q.defer();

    // Find the user type, based on the user's roles
    Dtcarrow.User.getType(user.userId)
        .then(function(getTypeResult) {
            if (getTypeResult.success !== true || getTypeResult.data === '') {
                deferred.reject({ success: false, status: 422, caller: 'admincoachplayer.js>read', 
                    data: 'Empty user type' });
            }

            var table = getTypeResult.data;
            var idName = table.toLowerCase() + 'Id';

            var Model = Arrow.getModel('appc.mysql.eolmig/' + table);
            var query = 'SELECT ' + idName + ', firstName, lastName, address, city, state, zip, phone';
            query += table === 'Player' ? ', sportId, birthday, height, weight, hsName, hsTeamName, graduatingYear, gpa, hsCoachName, hsCoachEmail, hsCoachPhone, '
                  + 'clubOrg, clubTeamName, clubCoachName, clubCoachEmail, clubCoachPhone, hsAwards, clubAwards' : '';
            query += table === 'Coach' ? ', sportId, orgName, teamName, experience, websiteTeam, websiteSchool, `character`, class2017, class2018, class2019' : '';
            query += ' FROM ' + table + ' WHERE userId = ' + user.userId;
            Model.query({ customSqlQuery: query }, function(err, results) {
                if (err) {
                    deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>read', data: err });
                    return deferred.promise;
                }

                if (results.length === 0) {
                    deferred.reject({ success: false, status: 404, caller: 'admincoachplayer.js>read', data: 'Empty query results' });
                    return deferred.promise;
                }

                var output = {
                    userId: user.userId,
                    admincoachplayerId: results[0][idName],
                    sportId: results[0].sportId,
                    email: user.email,
                    enabled: (user.enabled === 'true'), // Converting to true/false
                    firstName: results[0].firstName,
                    lastName: results[0].lastName,
                    address: results[0].address,
                    city: results[0].city,
                    state: results[0].state,
                    zip: results[0].zip,
                    phone: results[0].phone,
                    sportId: results[0].sportId,
                    roles: user.roles
                };

                if (table === 'Player') {
                    output.birthday = results[0].birthday;
                    output.height = results[0].height;
                    output.weight = results[0].weight;
                    output.hsName = results[0].hsName;
                    output.hsTeamName = results[0].hsTeamName;
                    output.graduatingYear = results[0].graduatingYear;
                    output.gpa = results[0].gpa;
                    output.hsCoachName = results[0].hsCoachName;
                    output.hsCoachEmail = results[0].hsCoachEmail;
                    output.hsCoachPhone = results[0].hsCoachPhone;
                    output.clubOrg = results[0].clubOrg;
                    output.clubTeamName = results[0].clubTeamName;
                    output.clubCoachName = results[0].clubCoachName;
                    output.clubCoachEmail = results[0].clubCoachEmail;
                    output.clubCoachPhone = results[0].clubCoachPhone;
                    output.hsAwards = results[0].hsAwards;
                    output.clubAwards = results[0].clubAwards;

                    // Adding user images too
                    // Bad form mixing promises and extra queries, but in a rush
                    var q = 'SELECT * FROM PlayerImage WHERE playerId = ' + results[0].playerId + ' ORDER BY profile';
                    Model.query({ customSqlQuery: q }, 
                        function(err, imageresults) {
                            if (err) {
                                deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>read>imageresults', data: err });
                                return deferred.promise;
                            }

                            output.images = imageresults;
                            deferred.resolve({ success: true, status: 200, caller: 'admincoachplayer.js>read>imageresults', data: output });
                            return deferred.promise;
                        }, function(err) {
                            deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>read>imageresults', data: err });
                            return deferred.promise;
                        });

                } else if (table === 'Coach') {
                    output.orgName = results[0].orgName;
                    output.teamName = results[0].teamName;
                    output.experience = results[0].experience;
                    output.websiteTeam = results[0].websiteTeam;
                    output.websiteSchool = results[0].websiteSchool;
                    output.character = results[0].character;
                    output.class2017 = results[0].class2017;
                    output.class2018 = results[0].class2018;
                    output.class2019 = results[0].class2019;

                    deferred.resolve({ success: true, status: 200, caller: 'admincoachplayer.js>read', data: output });
                    return deferred.promise;

                } else if (table === 'Admin') {
                    deferred.resolve({ success: true, status: 200, caller: 'admincoachplayer.js>read', data: output });
                    return deferred.promise;                    
                }
            });
        });

    return deferred.promise;                    
};

module.exports.update = function(user) {
    // TODO: Handle email address change
    // Can't change sportId once a user is created

    var deferred = Q.defer();

    var check = {
        userId: 'string',
        firstName: 'string',
        lastName: 'string',
        address: 'string', 
        city: 'string', 
        state: 'string', 
        zip: 'string',
        phone: 'string'
    }
    var checkedUser = Dtcarrow.Common.checkObject(user, check);
    if (!checkedUser) {
        deferred.reject({ success: false, status: 422, caller: 'admincoachplayer.js>update',
            data: 'Inbound object does not match expectations' });
        return deferred.promise;
    }

    // Find the user's type and save that as the table name
    var table = Dtcarrow.User.getType(checkedUser.userId)
        .then(function(table) {
            var Model = Arrow.getModel('appc.mysql.eolmig/' + table.data);
            var query = 'UPDATE ' + table.data + ' SET '
                + 'firstName = "' + checkedUser.firstName + '",'
                + 'lastName = "' + checkedUser.lastName + '",'
                + 'address = "' + checkedUser.address + '",'
                + 'city = "' + checkedUser.city + '",'
                + 'state = "' + checkedUser.state + '",'
                + 'zip = "' + checkedUser.zip + '",'
                + 'phone = "' + checkedUser.phone + '"';
            if (table.data === 'Player') {
                query += ', birthday = "' + checkedUser.birthday + '", height = ' + checkedUser.height
                      + ', weight = ' + checkedUser.weight + ', hsName = "' + checkedUser.hsName + '"'
                      + ', hsTeamName = "' + checkedUser.hsTeamName + '", graduatingYear = "' + checkedUser.graduatingYear + '"'
                      + ', gpa = "' + checkedUser.gpa + '", hsCoachName = "' + checkedUser.hsCoachName + '"'
                      + ', hsCoachEmail = "' + checkedUser.hsCoachEmail + '", hsCoachPhone = "' + checkedUser.hsCoachPhone + '"'
                      + ', clubOrg = "' + checkedUser.clubOrg + '", clubTeamName = "' + checkedUser.clubTeamName + '"'
                      + ', clubCoachName = "' + checkedUser.clubCoachName + '", clubCoachEmail = "' + checkedUser.clubCoachEmail + '"'
                      + ', clubCoachPhone = "' + checkedUser.clubCoachPhone + '", hsAwards = "' + checkedUser.hsAwards + '"'
                      + ', clubAwards = "' + checkedUser.clubAwards + '"';
            }
            if (table.data === 'Coach') {
                query += ', orgName = "' + checkedUser.orgName + '", teamName = "' + checkedUser.teamName + '"'
                      + ', experience = "' + checkedUser.experience + '", websiteTeam = "' + checkedUser.websiteTeam + '"'
                      + ', websiteSchool = "' + checkedUser.websiteSchool + '", `character` = "' + checkedUser.character + '"'
                      + ', class2017 = "' + checkedUser.class2017 + '", class2018 = "' + checkedUser.class2018 + '"'
                      + ', class2019 = "' + checkedUser.class2019 + '"';
            }
            
            query += ' WHERE userId = ' + checkedUser.userId;

            Model.query({ customSqlQuery: query }, function(err, r) {
                if (err) {
                    deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>update', 
                        data: 'SQL error: ' + err });
                    return deferred.promise;
                }

                deferred.resolve({ success: true, status: 200, caller: 'admincoachplayer.js>update',
                    data: checkedUser });
            });
        })
        .done(null, function(err) {
            deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>update', 
                data: err });
        });

    return deferred.promise;
}

module.exports.delete = function(user) {
    // Deletes a record from the Admin, Coach, or Player table based on the user object
    var deferred = Q.defer();

    // Find the user's type and save that as the table name
    var table = Dtcarrow.User.getType(user.userId)
        .then(function(table) {
            if (typeof table === 'undefined' || table === '') {
                deferred.reject({ success: false, status: 404, caller: 'admincoachplayer.js>delete', 
                    data: 'Empty response from User.getType' });
                return deferred.promise;
            }

            var Model = Arrow.getModel('appc.mysql.eolmig/User');
            var query = 'DELETE FROM ' + table + ' WHERE userId = ' + user.userId;
            Model.query({ customSqlQuery: query }, function(err, rs) {
                if (err) {
                    deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>delete', data: err });
                    return deferred.promise;
                }

                deferred.resolve({ success: true, status: 200, caller: 'admincoachplayer.js>delete', data: user });
            });
        })
        .fail(function(err) {
            deferred.reject({ success: false, status: 500, caller: 'admincoachplayer.js>delete', 
                data: 'error in User.getType: ' + err });
        });

    return deferred.promise;
}
