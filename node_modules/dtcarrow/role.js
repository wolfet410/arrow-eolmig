// Library code specifically for role api code
var Arrow = require('arrow'),
    Q = require('q'),
    Dtcarrow = require('dtcarrow');

module.exports.getRoleFromSportType = function(sport, type) {
    var deferred = Q.defer();

    var Model = Arrow.getModel('appc.mysql.eolmig/Team');
    var query = 'SELECT * FROM Role WHERE description = "' + sport + ' ' + type + '" LIMIT 1';
    Model.query({ customSqlQuery: query }, function(err, results) {
        if (err) {
            deferred.reject({ success: false, status: 500, caller: 'role.js>getRoleFromSportType',
                data: err });
            return deferred.promise;
        }

        if (typeof results === 'undefined' || results.length === 0) {
            deferred.reject({ success: false, status: 422, caller: 'role.js>getRoleFromSportType',
                data: 'No results' });
            return deferred.promise;
        }

        deferred.resolve({ success: true, status: 200, caller: 'role.js>getRoleFromSportType',
                data: results[0] });
    });

    return deferred.promise;
};

// CRUD
module.exports.readAll = function() {
    // Gets a list of all teams via the ViewTeamList view
    var deferred = Q.defer();

    var Model = Arrow.getModel('appc.mysql.eolmig/Team');
    var query = 'SELECT * FROM Role'
    Model.query({ customSqlQuery: query }, function(err, results) {
        if (err) {
            deferred.reject({ success: false, status: 500, caller: 'role.js>readAll',
                data: err });
            return deferred.promise;
        }

        if (typeof results === 'undefined' || results.length === 0) {
            deferred.reject({ success: false, status: 422, caller: 'role.js>readAll',
                data: 'No results' });
            return deferred.promise;
        }

        deferred.resolve({ success: true, status: 200, caller: 'role.js>readAll',
                data: results });
    });

    return deferred.promise;
};